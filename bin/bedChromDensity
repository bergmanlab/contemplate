#!/usr/bin/python

from sys import *
from optparse import OptionParser
import bed

# === COMMAND LINE INTERFACE, OPTIONS AND HELP ===
parser = OptionParser("usage: %prog [options] filename - convert bed to UCSC genome graph") 

#parser.add_option("-l", "--wordlength", dest="motiflength", action="store", help="length of word [default: %default, hexamers]", type="int", metavar="NUMBER", default="6") 
#parser.add_option("-m", "--maf", dest="maf", action="store_true", help="force maf format [default: %default]", default=True) 
#parser.add_option("-f", "--fasta", dest="maf", action="store_false", help="force fasta format (if not specified, we assume UCSC .maf file format") 
(options, args) = parser.parse_args()

# ==== FUNCTIONs =====
    
# ----------- MAIN --------------
if args==[]: 
    parser.print_help()
    exit(1)

filename = args[0]

beds = bed.parseBedFilename(filename)

chromBins = {}
for b in beds:
    bin = b.start / 1000000
    chromBins.setdefault(b.chrom, {}).setdefault(bin, set()).add(b.name)

for chrom, bins in chromBins.iteritems():
    for bin, binSet in bins.iteritems():
        binSize = len(binSet)
        fields = [str(chrom), str(bin*1000000), str(binSize)]
        print "\t".join(fields)

