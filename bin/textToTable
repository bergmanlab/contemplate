#!/usr/bin/python

from sys import *
from optparse import OptionParser

# === COMMAND LINE INTERFACE, OPTIONS AND HELP ===
parser = OptionParser("usage: %prog [options] textfile - convert text file to word-occurence table for classification packages") 

#parser.add_option("-l", "--wordlength", dest="motiflength", action="store", help="length of word [default: %default, hexamers]", type="int", metavar="NUMBER", default="6") 
#parser.add_option("-m", "--maf", dest="maf", action="store_true", help="force maf format [default: %default]", default=True) 
parser.add_option("-f", "--field", dest="field", action="store", type="int", help="text is contained in column x", default=1) 
#parser.add_option("-v", "--vertical", dest="vertical", action="store_true", help="just read text and split into words, output as a horizontal table") 
(options, args) = parser.parse_args()

# ==== FUNCTIONs =====
    
# ----------- MAIN --------------
if args==[]: 
    parser.print_help()
    exit(1)

filename = args[0]
field = options.field

if filename!="stdin":
    f = open(filename, "r")
else:
    f = stdin

allWords = set()
pmidWords = {}
for l in f:
    wordDict = {}
    fs = l.split("\t")
    pmid = fs[0]
    text = fs[field]
    words = text.split(" ")
    for w in words:
        wordDict.setdefault(w, 0)
        wordDict[w]+=1
        allWords.add(w)
    pmidWords[pmid]=wordDict

headers= ["pmid"]
headers.extend(allWords)
print "\t".join(headers)

for pmid in pmidWords:
    line = [str(pmid)]
    wordDict = pmidWords[pmid]
    for w in allWords:
        line.append(str(wordDict.get(w, "")))
    print "\t".join(line)
