#!/usr/bin/python

from sys import *
from optparse import OptionParser
import tabfile, Fasta
import re, util, operator, glob

# === COMMAND LINE INTERFACE, OPTIONS AND HELP ===
parser = OptionParser("usage: %prog [options] motifFile faFile - ouput occurences of motifs from motifFile (one per line, IUPAC OK)") 

#parser.add_option("-l", "--wordlength", dest="motiflength", action="store", help="length of word [default: %default, hexamers]", type="int", metavar="NUMBER", default="6") 
#parser.add_option("-m", "--maf", dest="maf", action="store_true", help="force maf format [default: %default]", default=True) 
parser.add_option("-d", "--dir", dest="dir", action="store_true", help="faFile is not a file but a directory. Try to parse all .fa files from this direcoty as input.") 
(options, args) = parser.parse_args()

# ==== FUNCTIONs =====
    
# ----------- MAIN --------------
if args==[]: 
    parser.print_help()
    exit(1)

motifFile, faFile = args
motifs = tabfile.slurplist(motifFile)
isDir = options.dir
if not isDir:
    faFiles = [faFile]
else:
    faFiles = glob.glob(faFile+"/*.fa")

regExs = {}
for m in motifs:
    reStr = util.resolveIupac(m)
    regex = re.compile(reStr)
    regExs[m]=regex

occs = {}
for m in motifs:
    occs[m]=0

i = 0
for faFile in faFiles:
    print "s",faFile
    if i % ((len(faFiles) / 100))==0:
        stderr.write(".")
    i+=1
    seqs = Fasta.readFasta(faFile)
    for seq in seqs.values():
        for mot,r in regExs.iteritems():
            occ = len(r.findall(seq.nucl))
            occs[mot]+=occ

    occsList = [(m, occ) for m, occ in occs.iteritems()]
    occsList.sort(key=operator.itemgetter(1))

    for mot, occ in occsList:
        print mot, occ



