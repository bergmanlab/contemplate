#!/usr/bin/python

from sys import *
from optparse import OptionParser
import tabfile, Fasta, iupacSearch

# === COMMAND LINE INTERFACE, OPTIONS AND HELP ===
parser = OptionParser("usage: %prog [options] motifs fafile fafile fafile... - scan fasta files for matches to motifs") 

#parser.add_option("-l", "--wordlength", dest="motiflength", action="store", help="length of word [default: %default, hexamers]", type="int", metavar="NUMBER", default="6") 
#parser.add_option("-m", "--maf", dest="maf", action="store_true", help="force maf format [default: %default]", default=True) 
#parser.add_option("-f", "--fasta", dest="maf", action="store_false", help="force fasta format (if not specified, we assume UCSC .maf file format") 
(options, args) = parser.parse_args()

# ==== FUNCTIONs =====
    
# ----------- MAIN --------------
if args==[]: 
    parser.print_help()
    exit(1)

motifFile = args[0]
files = args[1:]

motifs = tabfile.slurpdict(motifFile, doNotCheckLen=True)
motReList, motReStr, motDesc = iupacSearch.compileMotifs(motifs)

for f in files:
    faSeqs = Fasta.readFastaAsList(f)
    for faSeq in faSeqs:
        matches = iupacSearch.scan(faSeq.nucl, motReList)
        for motif, posList in matches.iteritems():
            motiflen = len(motif)
            for pos, strand in posList:
                fs = [ faSeq.id, str(pos), str(pos+motiflen), motif, "0", strand ]
                print "\t".join(fs)


