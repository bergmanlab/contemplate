#!/usr/bin/python

from sys import *
from optparse import OptionParser
import Fasta

# === COMMAND LINE INTERFACE, OPTIONS AND HELP ===
parser = OptionParser("usage: %prog [options] - print lenghts of fasta sequences") 

#parser.add_option("-l", "--wordlength", dest="motiflength", action="store", help="length of word [default: %default, hexamers]", type="int", metavar="NUMBER", default="6") 
#parser.add_option("-m", "--maf", dest="maf", action="store_true", help="force maf format [default: %default]", default=True) 
#parser.add_option("-f", "--fasta", dest="maf", action="store_false", help="force fasta format (if not specified, we assume UCSC .maf file format") 
parser.add_option("-o", "--onlyFirst", dest="onlyFirst", action="store_true", help="only length of first sequence") 
parser.add_option("-t", "--total", dest="total", action="store_true", help="print total") 
(options, args) = parser.parse_args()

# ==== FUNCTIONs =====
    
# ----------- MAIN --------------
if args==[]: 
    parser.print_help()
    exit(1)

onlyFirst = options.onlyFirst
total = options.total
totalSize=0

def output(seq, onlyFirst, total):
    global totalSize
    if not onlyFirst:
        print seq.id, len(seq.nucl)
        totalSize+=len(seq.nucl)
    else:
        print len(seq.nucl)
        totalSize+=len(seq.nucl)

for f in args:
    seqs = Fasta.readFasta(f)
    for seqid, seq in seqs.iteritems():
        output(seq, onlyFirst, total)
        if onlyFirst:
            break

if total:
    print "totalSize=",totalSize
